{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { isValidDomain } from './webauthn';\n/**\n * A custom Error used to return a more nuanced error detailing _why_ one of the eight documented\n * errors in the spec was raised after calling `navigator.credentials.create()` or\n * `navigator.credentials.get()`:\n *\n * - `AbortError`\n * - `ConstraintError`\n * - `InvalidStateError`\n * - `NotAllowedError`\n * - `NotSupportedError`\n * - `SecurityError`\n * - `TypeError`\n * - `UnknownError`\n *\n * Error messages were determined through investigation of the spec to determine under which\n * scenarios a given error would be raised.\n */\nexport class WebAuthnError extends Error {\n  constructor({\n    message,\n    code,\n    cause,\n    name\n  }) {\n    var _a;\n    // @ts-ignore: help Rollup understand that `cause` is okay to set\n    super(message, {\n      cause\n    });\n    this.__isWebAuthnError = true;\n    this.name = (_a = name !== null && name !== void 0 ? name : cause instanceof Error ? cause.name : undefined) !== null && _a !== void 0 ? _a : 'Unknown Error';\n    this.code = code;\n  }\n}\n/**\n * Error class for unknown WebAuthn errors.\n * Wraps unexpected errors that don't match known WebAuthn error conditions.\n */\nexport class WebAuthnUnknownError extends WebAuthnError {\n  constructor(message, originalError) {\n    super({\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: originalError,\n      message\n    });\n    this.name = 'WebAuthnUnknownError';\n    this.originalError = originalError;\n  }\n}\n/**\n * Type guard to check if an error is a WebAuthnError.\n * @param {unknown} error - The error to check\n * @returns {boolean} True if the error is a WebAuthnError\n */\nexport function isWebAuthnError(error) {\n  return typeof error === 'object' && error !== null && '__isWebAuthnError' in error;\n}\n/**\n * Attempt to intuit _why_ an error was raised after calling `navigator.credentials.create()`.\n * Maps browser errors to specific WebAuthn error codes for better debugging.\n * @param {Object} params - Error identification parameters\n * @param {Error} params.error - The error thrown by the browser\n * @param {CredentialCreationOptions} params.options - The options passed to credentials.create()\n * @returns {WebAuthnError} A WebAuthnError with a specific error code\n * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n */\nexport function identifyRegistrationError({\n  error,\n  options\n}) {\n  var _a, _b, _c;\n  const {\n    publicKey\n  } = options;\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property');\n  }\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 16)\n      return new WebAuthnError({\n        message: 'Registration ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error\n      });\n    }\n  } else if (error.name === 'ConstraintError') {\n    if (((_a = publicKey.authenticatorSelection) === null || _a === void 0 ? void 0 : _a.requireResidentKey) === true) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 4)\n      return new WebAuthnError({\n        message: 'Discoverable credentials were required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n        cause: error\n      });\n    } else if (\n    // @ts-ignore: `mediation` doesn't yet exist on CredentialCreationOptions but it's possible as of Sept 2024\n    options.mediation === 'conditional' && ((_b = publicKey.authenticatorSelection) === null || _b === void 0 ? void 0 : _b.userVerification) === 'required') {\n      // https://w3c.github.io/webauthn/#sctn-createCredential (Step 22.4)\n      return new WebAuthnError({\n        message: 'User verification was required during automatic registration but it could not be performed',\n        code: 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE',\n        cause: error\n      });\n    } else if (((_c = publicKey.authenticatorSelection) === null || _c === void 0 ? void 0 : _c.userVerification) === 'required') {\n      // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 5)\n      return new WebAuthnError({\n        message: 'User verification was required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n        cause: error\n      });\n    }\n  } else if (error.name === 'InvalidStateError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 20)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 3)\n    return new WebAuthnError({\n      message: 'The authenticator was previously registered',\n      code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n      cause: error\n    });\n  } else if (error.name === 'NotAllowedError') {\n    /**\n     * Pass the error directly through. Platforms are overloading this error beyond what the spec\n     * defines and we don't want to overwrite potentially useful error messages.\n     */\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error\n    });\n  } else if (error.name === 'NotSupportedError') {\n    const validPubKeyCredParams = publicKey.pubKeyCredParams.filter(param => param.type === 'public-key');\n    if (validPubKeyCredParams.length === 0) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 10)\n      return new WebAuthnError({\n        message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n        code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n        cause: error\n      });\n    }\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 2)\n    return new WebAuthnError({\n      message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n      code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n      cause: error\n    });\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname;\n    if (!isValidDomain(effectiveDomain)) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 7)\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error\n      });\n    } else if (publicKey.rp.id !== effectiveDomain) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 8)\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error\n      });\n    }\n  } else if (error.name === 'TypeError') {\n    if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 5)\n      return new WebAuthnError({\n        message: 'User ID was not between 1 and 64 characters',\n        code: 'ERROR_INVALID_USER_ID_LENGTH',\n        cause: error\n      });\n    }\n  } else if (error.name === 'UnknownError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 1)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 8)\n    return new WebAuthnError({\n      message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error\n    });\n  }\n  return new WebAuthnError({\n    message: 'a Non-Webauthn related error has occurred',\n    code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n    cause: error\n  });\n}\n/**\n * Attempt to intuit _why_ an error was raised after calling `navigator.credentials.get()`.\n * Maps browser errors to specific WebAuthn error codes for better debugging.\n * @param {Object} params - Error identification parameters\n * @param {Error} params.error - The error thrown by the browser\n * @param {CredentialRequestOptions} params.options - The options passed to credentials.get()\n * @returns {WebAuthnError} A WebAuthnError with a specific error code\n * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n */\nexport function identifyAuthenticationError({\n  error,\n  options\n}) {\n  const {\n    publicKey\n  } = options;\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property');\n  }\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 16)\n      return new WebAuthnError({\n        message: 'Authentication ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error\n      });\n    }\n  } else if (error.name === 'NotAllowedError') {\n    /**\n     * Pass the error directly through. Platforms are overloading this error beyond what the spec\n     * defines and we don't want to overwrite potentially useful error messages.\n     */\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error\n    });\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname;\n    if (!isValidDomain(effectiveDomain)) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-discover-from-external-source (Step 5)\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error\n      });\n    } else if (publicKey.rpId !== effectiveDomain) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-discover-from-external-source (Step 6)\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error\n      });\n    }\n  } else if (error.name === 'UnknownError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion (Step 1)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion (Step 12)\n    return new WebAuthnError({\n      message: 'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error\n    });\n  }\n  return new WebAuthnError({\n    message: 'a Non-Webauthn related error has occurred',\n    code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n    cause: error\n  });\n}","map":{"version":3,"names":["isValidDomain","WebAuthnError","Error","constructor","message","code","cause","name","__isWebAuthnError","_a","undefined","WebAuthnUnknownError","originalError","isWebAuthnError","error","identifyRegistrationError","options","publicKey","signal","AbortSignal","authenticatorSelection","requireResidentKey","mediation","_b","userVerification","_c","validPubKeyCredParams","pubKeyCredParams","filter","param","type","length","effectiveDomain","window","location","hostname","rp","id","user","byteLength","identifyAuthenticationError","rpId"],"sources":["/Users/anupkumar/task-manager-app/frontend/node_modules/@supabase/auth-js/src/lib/webauthn.errors.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { StrictOmit } from './types'\nimport { isValidDomain } from './webauthn'\nimport {\n  PublicKeyCredentialCreationOptionsFuture,\n  PublicKeyCredentialRequestOptionsFuture,\n} from './webauthn.dom'\n\n/**\n * A custom Error used to return a more nuanced error detailing _why_ one of the eight documented\n * errors in the spec was raised after calling `navigator.credentials.create()` or\n * `navigator.credentials.get()`:\n *\n * - `AbortError`\n * - `ConstraintError`\n * - `InvalidStateError`\n * - `NotAllowedError`\n * - `NotSupportedError`\n * - `SecurityError`\n * - `TypeError`\n * - `UnknownError`\n *\n * Error messages were determined through investigation of the spec to determine under which\n * scenarios a given error would be raised.\n */\nexport class WebAuthnError extends Error {\n  code: WebAuthnErrorCode\n\n  protected __isWebAuthnError = true\n\n  constructor({\n    message,\n    code,\n    cause,\n    name,\n  }: {\n    message: string\n    code: WebAuthnErrorCode\n    cause?: Error | unknown\n    name?: string\n  }) {\n    // @ts-ignore: help Rollup understand that `cause` is okay to set\n    super(message, { cause })\n    this.name = name ?? (cause instanceof Error ? cause.name : undefined) ?? 'Unknown Error'\n    this.code = code\n  }\n}\n\n/**\n * Error class for unknown WebAuthn errors.\n * Wraps unexpected errors that don't match known WebAuthn error conditions.\n */\nexport class WebAuthnUnknownError extends WebAuthnError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super({\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: originalError,\n      message,\n    })\n    this.name = 'WebAuthnUnknownError'\n    this.originalError = originalError\n  }\n}\n\n/**\n * Type guard to check if an error is a WebAuthnError.\n * @param {unknown} error - The error to check\n * @returns {boolean} True if the error is a WebAuthnError\n */\nexport function isWebAuthnError(error: unknown): error is WebAuthnError {\n  return typeof error === 'object' && error !== null && '__isWebAuthnError' in error\n}\n\n/**\n * Error codes for WebAuthn operations.\n * These codes provide specific information about why a WebAuthn ceremony failed.\n * @see {@link https://w3c.github.io/webauthn/#sctn-defined-errors W3C WebAuthn Spec - Defined Errors}\n */\nexport type WebAuthnErrorCode =\n  | 'ERROR_CEREMONY_ABORTED'\n  | 'ERROR_INVALID_DOMAIN'\n  | 'ERROR_INVALID_RP_ID'\n  | 'ERROR_INVALID_USER_ID_LENGTH'\n  | 'ERROR_MALFORMED_PUBKEYCREDPARAMS'\n  | 'ERROR_AUTHENTICATOR_GENERAL_ERROR'\n  | 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT'\n  | 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT'\n  | 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED'\n  | 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG'\n  | 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE'\n  | 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY'\n\n/**\n * Attempt to intuit _why_ an error was raised after calling `navigator.credentials.create()`.\n * Maps browser errors to specific WebAuthn error codes for better debugging.\n * @param {Object} params - Error identification parameters\n * @param {Error} params.error - The error thrown by the browser\n * @param {CredentialCreationOptions} params.options - The options passed to credentials.create()\n * @returns {WebAuthnError} A WebAuthnError with a specific error code\n * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n */\nexport function identifyRegistrationError({\n  error,\n  options,\n}: {\n  error: Error\n  options: StrictOmit<CredentialCreationOptions, 'publicKey'> & {\n    publicKey: PublicKeyCredentialCreationOptionsFuture\n  }\n}): WebAuthnError {\n  const { publicKey } = options\n\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property')\n  }\n\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 16)\n      return new WebAuthnError({\n        message: 'Registration ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'ConstraintError') {\n    if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 4)\n      return new WebAuthnError({\n        message:\n          'Discoverable credentials were required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n        cause: error,\n      })\n    } else if (\n      // @ts-ignore: `mediation` doesn't yet exist on CredentialCreationOptions but it's possible as of Sept 2024\n      options.mediation === 'conditional' &&\n      publicKey.authenticatorSelection?.userVerification === 'required'\n    ) {\n      // https://w3c.github.io/webauthn/#sctn-createCredential (Step 22.4)\n      return new WebAuthnError({\n        message:\n          'User verification was required during automatic registration but it could not be performed',\n        code: 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE',\n        cause: error,\n      })\n    } else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n      // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 5)\n      return new WebAuthnError({\n        message: 'User verification was required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'InvalidStateError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 20)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 3)\n    return new WebAuthnError({\n      message: 'The authenticator was previously registered',\n      code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n      cause: error,\n    })\n  } else if (error.name === 'NotAllowedError') {\n    /**\n     * Pass the error directly through. Platforms are overloading this error beyond what the spec\n     * defines and we don't want to overwrite potentially useful error messages.\n     */\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error,\n    })\n  } else if (error.name === 'NotSupportedError') {\n    const validPubKeyCredParams = publicKey.pubKeyCredParams.filter(\n      (param) => param.type === 'public-key'\n    )\n\n    if (validPubKeyCredParams.length === 0) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 10)\n      return new WebAuthnError({\n        message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n        code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n        cause: error,\n      })\n    }\n\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 2)\n    return new WebAuthnError({\n      message:\n        'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n      code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n      cause: error,\n    })\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname\n    if (!isValidDomain(effectiveDomain)) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 7)\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error,\n      })\n    } else if (publicKey.rp.id !== effectiveDomain) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 8)\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'TypeError') {\n    if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 5)\n      return new WebAuthnError({\n        message: 'User ID was not between 1 and 64 characters',\n        code: 'ERROR_INVALID_USER_ID_LENGTH',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'UnknownError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 1)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 8)\n    return new WebAuthnError({\n      message:\n        'The authenticator was unable to process the specified options, or could not create a new credential',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error,\n    })\n  }\n\n  return new WebAuthnError({\n    message: 'a Non-Webauthn related error has occurred',\n    code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n    cause: error,\n  })\n}\n\n/**\n * Attempt to intuit _why_ an error was raised after calling `navigator.credentials.get()`.\n * Maps browser errors to specific WebAuthn error codes for better debugging.\n * @param {Object} params - Error identification parameters\n * @param {Error} params.error - The error thrown by the browser\n * @param {CredentialRequestOptions} params.options - The options passed to credentials.get()\n * @returns {WebAuthnError} A WebAuthnError with a specific error code\n * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n */\nexport function identifyAuthenticationError({\n  error,\n  options,\n}: {\n  error: Error\n  options: StrictOmit<CredentialRequestOptions, 'publicKey'> & {\n    publicKey: PublicKeyCredentialRequestOptionsFuture\n  }\n}): WebAuthnError {\n  const { publicKey } = options\n\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property')\n  }\n\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 16)\n      return new WebAuthnError({\n        message: 'Authentication ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'NotAllowedError') {\n    /**\n     * Pass the error directly through. Platforms are overloading this error beyond what the spec\n     * defines and we don't want to overwrite potentially useful error messages.\n     */\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error,\n    })\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname\n    if (!isValidDomain(effectiveDomain)) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-discover-from-external-source (Step 5)\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error,\n      })\n    } else if (publicKey.rpId !== effectiveDomain) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-discover-from-external-source (Step 6)\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'UnknownError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion (Step 1)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion (Step 12)\n    return new WebAuthnError({\n      message:\n        'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error,\n    })\n  }\n\n  return new WebAuthnError({\n    message: 'a Non-Webauthn related error has occurred',\n    code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n    cause: error,\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}